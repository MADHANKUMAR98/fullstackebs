Here's the Angular 19 version of the React login component you provided, ensuring excellent styling with a modern Angular approach. I am using Angular Material for a professional and clean UI. 

### Steps to Set Up:
1. Install Angular Material:
   ```bash
   ng add @angular/material
   ```

2. **Folder Structure**:
   Place the component in a logical structure:
   - `app/components/login/login.component.ts`
   - Styles are integrated with Angular Material.

---

### **Code for Login Component**:

#### 1. **Login Component TypeScript (login.component.ts)**:
```typescript
import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.scss'],
})
export class LoginComponent {
  loginForm: FormGroup;
  showPassword: boolean = false;
  message: string = '';
  isSuccess: boolean = false;

  constructor(
    private fb: FormBuilder,
    private router: Router,
    private http: HttpClient
  ) {
    this.loginForm = this.fb.group({
      userId: ['', [Validators.required]],
      password: ['', [Validators.required, Validators.minLength(6)]],
    });
  }

  togglePasswordVisibility() {
    this.showPassword = !this.showPassword;
  }

  onSubmit() {
    if (this.loginForm.invalid) return;

    const { userId, password } = this.loginForm.value;

    this.http
      .post<any>('http://localhost:8080/users/login', { userId, password })
      .subscribe({
        next: (response) => {
          const { message, user, token } = response;
          this.message = message;

          if (user) {
            localStorage.setItem('token', token);
            this.isSuccess = true;
            this.router.navigate(['/']);
          } else {
            this.isSuccess = false;
          }
        },
        error: (error) => {
          this.message =
            'Login error: ' +
            (error.error?.message || 'Unexpected error occurred');
          this.isSuccess = false;
        },
      });
  }
}
```

---

#### 2. **Login Component Template (login.component.html)**:
```html
<div class="login-container">
  <mat-card class="login-card">
    <mat-card-header>
      <div class="header-container">
        <h1 class="mat-h1">Login</h1>
        <img src="assets/logo.png" alt="Logo" class="logo" />
      </div>
    </mat-card-header>

    <mat-card-content>
      <form [formGroup]="loginForm" (ngSubmit)="onSubmit()">
        <!-- User ID Field -->
        <mat-form-field appearance="outline" class="full-width">
          <mat-label>User ID</mat-label>
          <input
            matInput
            placeholder="00112233"
            formControlName="userId"
            type="text"
            required
          />
        </mat-form-field>

        <!-- Password Field -->
        <mat-form-field appearance="outline" class="full-width">
          <mat-label>Password</mat-label>
          <input
            matInput
            [type]="showPassword ? 'text' : 'password'"
            formControlName="password"
            placeholder="·········"
            required
          />
          <button
            mat-icon-button
            matSuffix
            (click)="togglePasswordVisibility()"
            type="button"
          >
            <mat-icon>{{ showPassword ? 'visibility_off' : 'visibility' }}</mat-icon>
          </button>
        </mat-form-field>

        <!-- Error/Success Message -->
        <div *ngIf="message" class="message">
          <p [ngClass]="isSuccess ? 'success-text' : 'error-text'">
            {{ message }}
          </p>
        </div>

        <!-- Forgot Password -->
        <div class="forgot-password">
          <a routerLink="/resetPassword" mat-stroked-button color="primary"
            >Forgot password?</a
          >
        </div>

        <!-- Submit Button -->
        <button
          mat-raised-button
          color="primary"
          class="full-width submit-button"
          [disabled]="loginForm.invalid"
          type="submit"
        >
          Sign In
        </button>

        <!-- Register Link -->
        <div class="register-link">
          <span>Not registered? </span>
          <a routerLink="/register" mat-button color="accent">Register here</a>
        </div>
      </form>
    </mat-card-content>
  </mat-card>
</div>
```

---

#### 3. **Login Component SCSS (login.component.scss)**:
```scss
@import '~@angular/material/prebuilt-themes/indigo-pink.css';

.login-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: url('assets/login-bg.png') no-repeat center center/cover;
}

.login-card {
  max-width: 400px;
  width: 100%;
  border-radius: 12px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  background-color: rgba(255, 255, 255, 0.95);

  .header-container {
    display: flex;
    justify-content: space-between;
    align-items: center;

    .logo {
      height: 50px;
      filter: hue-rotate(270deg);
    }
  }

  .mat-h1 {
    font-size: 1.8rem;
    margin: 0;
    font-weight: bold;
    color: #333;
  }

  .full-width {
    width: 100%;
    margin-top: 1rem;
  }

  .forgot-password {
    text-align: right;
    margin-top: 0.5rem;
  }

  .submit-button {
    margin-top: 1.5rem;
  }

  .register-link {
    text-align: center;
    margin-top: 1rem;
    color: #555;

    a {
      text-decoration: none;
      font-weight: bold;
      color: #3f51b5;

      &:hover {
        text-decoration: underline;
      }
    }
  }

  .message {
    text-align: center;
    margin-top: 1rem;

    .success-text {
      color: green;
    }

    .error-text {
      color: red;
    }
  }
}
```

---

### 4. **Import Modules in `app.module.ts`**:
Ensure you import necessary modules for Angular Material:
```typescript
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { HttpClientModule } from '@angular/common/http';
import { ReactiveFormsModule } from '@angular/forms';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatButtonModule } from '@angular/material/button';
import { MatIconModule } from '@angular/material/icon';
import { MatCardModule } from '@angular/material/card';

import { AppComponent } from './app.component';
import { LoginComponent } from './components/login/login.component';

@NgModule({
  declarations: [AppComponent, LoginComponent],
  imports: [
    BrowserModule,
    HttpClientModule,
    ReactiveFormsModule,
    MatFormFieldModule,
    MatInputModule,
    MatButtonModule,
    MatIconModule,
    MatCardModule,
  ],
  providers: [],
  bootstrap: [AppComponent],
})
export class AppModule {}
```

---

### Key Features:
1. **Angular Material**: Provides modern and sleek styling.
2. **Reactive Forms**: Used for handling form inputs and validations.
3. **Password Visibility Toggle**: Integrated using Angular Material's `mat-icon-button`.
4. **Error Handling**: Displays server errors and messages dynamically.
5. **Responsive Design**: Styled for excellent responsiveness.

You can further customize the styles or components based on your needs. This approach ensures modularity, reusability, and a clean UI.
